logging:
  level:
    root: ${ROOT_LOG_LEVEL:ERROR}
    org:
      hibernate:
        type: ERROR
        SQL: ERROR
        orm.jdbc.bind: ERROR
        type.descriptor.sql: ERROR
      springframework:
        security: ERROR
        web: ERROR
    recolnat:
      collection:
        manager: ${COLLECTION_LOG_LEVEL:ERROR}

spring:
  mail:
    host: ${SMTP_HOST:smtp.mnhn.fr}
    port: ${SMTP_PORT:25}
    properties.mail:
      smtp:
        auth: false
        connectiontimeout: 10000
        timeout: 10000
        starttls.enable: false
  liquibase:
    contexts: dev
    enabled: ${LIQUIBASE_ACTIVE:false}


  application:
    name: collection-manager
  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${DATABASE_USR:collections_owner_user}
    password: ${DATABASE_PWD:R4lOZzzmxrlM8I4sDCxhDOXXRt9L2Wxbu9KoTYIxHuWlbUyuL2E476Nw5jaLHrF1}
    url: ${DATABASE_URL:jdbc:postgresql://192.168.130.5:5432/collections?currentSchema=collections}
    hikari:
      maximum-pool-size: 10
      connection-timeout: 10000
      initialization-fail-timeout: 60000
      max-lifetime: ${MAX_LIFE:600000}
  banner:
    location: banner.txt

  jpa:
    database: postgresql
    open-in-view: false
    generate-ddl: false
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        generate_statistics: ${HIBERNATE_METRICS:false}
        format_sql: true
        show_sql: ${JPA_SHOW_SQL:false}
        jdbc.batch_size: 200
        order_inserts: true
        order_updates: true
        dialect: org.recolnat.collection.manager.common.config.PostgreSQL10DialectUUID

  security:
    oauth2:
      resourceserver:
        opaquetoken:
          introspection-uri: ${AUTH_SERVER_INTRO:http://localhost:8089/auth/realms/recolnat-oauth2/protocol/openid-connect/token/introspect}
          client-id: ${CLIENT_ID:collection-manager-oidc}
          client-secret: ${CLIENT_SECRET:ee5jLU9Z27S1SNyusPI5o8ODmcjJ0Mw5}
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
management:
  endpoints:
    web:
      exposure:
        include: "*"
      cors:
        allow-credentials: false
        allowed-headers: true
        allowed-methods: "*"
        exposed-headers: "*"
        allowed-origins: "*"
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
    tags:
      application: ${spring.application.name}
  tracing:
    enabled: false
    sampling.probability: 1.0

authorisation:
  base_url: ${AUTH_SERVER_API:#{'http://localhost:8081'}}

mediatheque:
  stream:
    base_url: ${MEDIATHEQUE_URL:#{'https://mediatheque.mnhn.fr/service/private/media/'}}
  header:
    key: ${MEDIATHEQUE_KEY:clientKey}
    value: ${MEDIATHEQUE_KEY_VAL:b81ea986-20f7-4ea1-a3fd-1d935f487d5d}
  connect:
    timeout: ${MEDIATHEQUE_TIMEOUT:1000}

taxonRef:
  api:
    base_url: ${TAXON_REF_SERVER_API:#{'http://dock-pas1.arzt.mnhn.fr:8098'}}
    api_key_name: ${TAXON_REF_SERVER_API_KEY_NAME:API_KEY}
    api_key_value: ${TAXON_REF_SERVER_API_KEY_VALUE:2e33b1d0-8540-420f-80dd-fff973149946}
    mock: ${TAXON_REF_SERVER_MOCK:false}

keycloak:
  auth-server-url-OpenApi: ${AUTH_SERVER:http://localhost:8089/auth/realms/recolnat-oauth2}

caching:
  statistics:
    statisticsTTL: ${STATS_TTL:3600000}

elasticsearch:
  uris: ${ES_URI:https://dinsi-es-01.arzp.mnhn.fr:9200}
  username: ${ES_USERNAME:recolnat_explorer}
  password: ${ES_SECRET:Mnhn@2023}
  connection-timeout: 100000
  socket-timeout: 10000
  https-ignore_certif: ${ES_IGNORE_ALL_HTTPS_CERTIF:true}
  https-certificate: ${ES_WITH_HTTPS_CERTIF:false}
  https-truststore: ${ES_WITH_HTTPS_TRUSTSTORE:false}

index:
  specimen: ${INDEX_SPECIMEN:rcn_specimen_short}

springdoc:
  show-actuator: true
  show-oauth2-endpoints: true
  swagger-ui:
    csrf.enabled: false
    oauth:
      appName: ^project.name^
      clientId: ${AUTH_CLIENT_ID:recolnat-oidc}
      clientSecret: ${CLIENT_SECRET:eaCcFXA78r1eYmmDnZPh8jv42e7wwabU}

application:
  title: ^project.name^
  version: ^project.version^

server:
  tomcat:
    max-http-form-post-size: 52428800
    max-swallow-size: 52428800

fileSystem:
  base-directory: ${FS_BASEDIR:/data}

import:
  directory: ${IMPORT_DIRECTORY:/imports}
  cron: ${IMPORT_CRON:0 * * * * ?}

mail:
  cron: ${MAIL_CRON:0 * * * * ?}

statistic:
  cron: ${STATISTIC_CRON:0 0 0 * * ?}
